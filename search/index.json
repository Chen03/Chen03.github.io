[{"content":" 开发的初衷是在安卓上有类似的软件，但是iOS上却没有，于是自己写了一个。\n以及，还有iOS自带的翻译过于不准确，和词典缺少不常见的词（尤其是流行语）的原因。\n至少自己用起来是很好用的！\n功能 搜索单词 翻译句子 一键添加到Anki note 安装 本应用要求 iOS16 及以上的系统。\nTestflight 如果你不懂得 Sideload 或者使用 Altstore，请参加应用的 Testflight 来安装应用。\n参加 Testflight\n如果你之前没有安装过 Testflight App，请参照页面内的指引安装 Testflight。\nIPA 请到 Release 里下载最新的 ipa。\n使用 网页浏览 点击地址栏输入网址以浏览网页。\n左下角的红色flag可以把当前页面添加到收藏，书本图标可以打开收藏。\n查询单词与翻译文本 选中任意文本时，会弹出 Search 和 Translate，点击 Search 会搜索当前单词，并且翻译上下文句子，方便理解。点击 Translate 会翻译当前句子。翻译使用的是有道翻译。\n右下角可以收起地址栏，拓宽空间。\n阅读模式 有时候网页的广告特别烦人，所以做了阅读模式。\n只要点击地址栏左侧的按钮就可以打开阅读模式。\n目前只适配了 Pixiv，后续大概会推出对 AO3 和 poipiku 的支持。\n添加到 Anki 在词语详情页面，长按任意释义或例句，即可把生词添加到 Anki。在添加前，可以对每一个 field 进行调整。\n注意：在使用这一功能前，要先点击齿轮获取 Anki 的信息，并设定单词信息和字段的关系。在编辑界面点击\u0026lt;/\u0026gt;标记，可以插入单词信息。下面是刚才的例子的设置：\n程序会把用双中括号括起的内容自动替换成对应的词条内容，填入上一步的 fields 中。\n注意：如果 Anki 中的卡片、牌组等信息更新了，要在本应用的设置中再次同步，否则可能出现问题。\n后续 大概会继续完善 bug 和修复细节，毕竟已经成了自己晚上睡觉前看同人必不可少的工具了……\n如果真的有除了自己的人用就好了……\n嗯没有也挺好的。\n","date":"2023-04-09T20:19:49+08:00","image":"https://chen03.github.io/p/staticeapp/cover.jpeg","permalink":"https://chen03.github.io/p/staticeapp/","title":"StaticeApp"},{"content":"终于做完字段转换了……解决方案就是，传一个 converter 进 AddNote 的 View 里，感觉有点像 delegate 的想法呢\n（要变成 Apple 的形状了，乌乌）\n到这里，这个 App 终于开始实用起来了\n然后就是为了解决 Published 和 Codable 不能共存的问题，在 StackOverflow 上找到了惊为天人的代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //Published+Value.swift private class PublishedWrapper\u0026lt;T\u0026gt; { @Published private(set) var value: T init(_ value: Published\u0026lt;T\u0026gt;) { _value = value } } extension Published { var unofficialValue: Value { PublishedWrapper(self).value } } //Published+Codable.swift extension Published: Decodable where Value: Decodable { public init(from decoder: Decoder) throws { self.init(wrappedValue: try .init(from: decoder)) } } extension Published: Encodable where Value: Encodable { public func encode(to encoder: Encoder) throws { try unofficialValue.encode(to: encoder) } } 好厉害……感觉自己只会用东西，别人真的在造东西……\n好困……有人为了测试 App（嗯）看小说看到了 7点半\n（确实要比系统词典好用，但是没有句子翻译很麻烦……）\n但是 knmf 真的很好磕！\n","date":"2023-04-01T15:42:32+08:00","permalink":"https://chen03.github.io/d/swift-%E5%BC%80%E5%8F%91%E9%9A%8F%E7%AC%942/","title":"Swift 开发随笔2"},{"content":"Width \u0026amp; Height width: auto 有四种表现： fill-avaliable: block(\u0026lt;div\u0026gt; \u0026lt;p\u0026gt;) fit-content: inline(\u0026lt;span\u0026gt; \u0026lt;a\u0026gt;) min-content max-content: CSS3新特性，不换行 height: auto 基本只有 fit-content 表现 父元素为 inline，子元素为 block（互相依赖时） 看的时候：\n（看到前言）作者绝对是EXFJ吧！\n（当季新番《CSS王国》）……ENFP？\n（不太好的笑话（？））……ESFJ？\n（盒子性别论）……ESFJ。//好吧其实也没对应……嗯……可能吧大概吧这只是本技术书籍放过自己吧\n（其实有第三性别）……哈？ENFJ？\n","date":"2023-03-30T20:19:07+08:00","permalink":"https://chen03.github.io/p/css%E4%B8%96%E7%95%8C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","title":"CSS世界读书笔记"},{"content":" iPad 笔色号 最後だけ笑って頂戴，いつかいつか報われるから，\nさざ波の様な 感情二つ，ここに居る理由見つけられるまで。\nすっからかんに生きたいな何にもないからさ，\nこのまま少しだけ君と踊る時間にハナタバを。\nいいじゃんか 嗚呼いいじゃんか，\n上手く言えなくてもいいじゃんか。\nPink MDN annoucement\n","date":"2023-03-30T12:37:10+08:00","permalink":"https://chen03.github.io/p/color/","title":"好看的颜色 Collection"},{"content":"Web Workers 可以让代码独立于主线程运行，避免大量的运算阻塞浏览器渲染画面，并且可以在计算过程中交互。\n其实它的功能和API非常简单，就是多线程工具。\n如何使用 网页端 创建 Worker 1 let worker = Worker(\u0026#34;/path/to/worker.js\u0026#34;) 接收来自 Worker 的信息 1 2 3 worker.onmessage = event =\u0026gt; { console.log(event.data) } 向 Worker 发送信息 1 worker.postMessage(\u0026#34;Hello!\u0026#34;) worker.js 接受信息 1 2 3 4 5 onmessage = event =\u0026gt; { if (event.data == \u0026#34;Hello!\u0026#34;) { //Do something... } } 发送信息给网页 1 postMessage(\u0026#34;How are you?\u0026#34;) 结合起来\u0026hellip; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u0026lt;script\u0026gt; let worker = Worker(\u0026#34;/path/to/worker.js\u0026#34;) worker.onmessage = event =\u0026gt; { console.log(event.data) } worker.postMessage(\u0026#34;Hello!\u0026#34;) //worker.js onmessage = event =\u0026gt; { if (event.data == \u0026#34;Hello!\u0026#34;) { postMessage(\u0026#34;How are you?\u0026#34;) } } 一个例子 算法大作业\ncalc.worker.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function calculate() { console.log(\u0026#39;calculate\u0026#39;); while (queue.size !== 0 \u0026amp;\u0026amp; !equal(dest, queue.peek().stat)) { //算法过程... if (lim % 23 === 0) { postMessage({type: \u0026#39;stat\u0026#39;, stat: now.stat, step: lim}); //发送计算过程到网页 } } //计算结束 hasStopped = true; postMessage({type: \u0026#39;stop\u0026#39;, dist: queue.peek().step, time: ((new Date).getTime())}); postMessage({type: \u0026#39;stat\u0026#39;, stat: dest, step: lim}); } // 以下为与网页交互内容 onmessage = (ev) =\u0026gt; { switch (ev.data.type) { case \u0026#39;start\u0026#39;: //开始算法过程 break; } } 网页端 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 function App() { ... const [worker, setWorker] = useState(null); useEffect(() =\u0026gt; { if (!worker) { var worker = new Worker(new URL(\u0026#39;./calc.worker.js\u0026#39;, import.meta.url)); //新建 Worker worker.onmessage = (ev) =\u0026gt; { switch(ev.data.type) { case \u0026#39;stat\u0026#39;: startTransition( () =\u0026gt; { setBoard(ev.data.stat); setStep(ev.data.step); }); break; case \u0026#39;stop\u0026#39;: setStopped(true); setDist(ev.data.dist); break; } } setWorker(worker); } }, []); return ( ... ); } 可以做到什么？ 执行大型计算时，可以避免阻塞主线程 好像没有了…… 但是真的在有用的时候很有用……\nTIPS 如果你在使用 Webpack 或者 Vite, 要这样创建 Worker:\n1 new Worker(new URL(\u0026#39;./worker.js\u0026#39;, import.meta.url)); 关于 Service Worker 内容来自 MDN\nService Worker 是另一种 Worker，通常用于 Web App 中，可以截获网页的网络请求事件并对请求加以修改，从而实现一些很厉害的功能：\n实现页面离线加载（使用缓存） 集中接收计算成本高的数据更新，比如地理位置和陀螺仪信息，这样多个页面就可以利用同一组数据 性能增强，比如预取用户可能需要的资源，比如相册中的后面数张图片 还有很多！ 通过 Service Worker，可以实现离线的 Web App！\n","date":"2023-03-30T10:28:18+08:00","image":"https://chen03.github.io/p/worker.js/cover.JPG","permalink":"https://chen03.github.io/p/worker.js/","title":"Worker.js"},{"content":"关于不同的翻译到底要怎么把单词数据转换成对应的Anki field的问题——\n（涉及到：字典类型、单词显示View、转换函数如何组织）\n最终决定还是：把 SearchResult 抽象出来，然后在各自的 SearchResult 中糅合\n并不行……Swift不支持泛型数组……\n可恶你不是现代语言吗怎么这点东西都不支持……\n它支持的！！但是，any SearchResult cannot conform to Protocol Identifiable\n解决方法：只要在 View 里尽量不用涉及要遵循接口的 View 就可以了……\nAnd protocol 里的 View 要写成 any View，因为 View 本身也是接口\n解决方法：使用 AnyView，是一个 Structure（怎么又来一个新东西\n（PS 既然 Swift 你都有这样的工具 struct 了，官方拓展一下 Published+Codable 又会怎么样呢……\n","date":"2023-03-29T22:46:55+08:00","permalink":"https://chen03.github.io/d/swift-%E5%BC%80%E5%8F%91%E9%9A%8F%E7%AC%941/","title":"Swift 开发随笔1"},{"content":" さよならって言わせてよ　昨日の寂しさに\nいつしか空っぽな心だけが　夜空に咲いたんだ\nHello, world.\n","date":"2023-03-29T12:59:57Z","image":"https://chen03.github.io/p/%E3%83%8F%E3%83%8A%E3%82%BF%E3%83%90/cover.JPG","permalink":"https://chen03.github.io/p/%E3%83%8F%E3%83%8A%E3%82%BF%E3%83%90/","title":"💐ハナタバ"},{"content":" How are you? 羨ましいな、みんなに愛されて\n","date":"2023-03-29T12:41:12Z","permalink":"https://chen03.github.io/p/hello/","title":"Hello?"},{"content":"呜呜搭个博客怎么都这么难……为什么官方文档关于 hugo new 只有一句话……是我的错吗……\n一定是hugo对我把它记成对家的惩罚（什么\n1 2 3 4 @Chen03 ➜ /workspaces/chen03.github.io (master) $ hexo new post/test.md bash: /usr/local/share/npm-global/bin/hexo: No such file or directory @Chen03 ➜ /workspaces/chen03.github.io (master) $ hugo new post/test.md Content \u0026#34;/workspaces/chen03.github.io/content/post/test.md\u0026#34; created ","date":"2023-03-29T12:41:12Z","permalink":"https://chen03.github.io/p/why-you-dont-render/","title":"Test"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://docs.stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://chen03.github.io/p/hello-world/cover.jpg","permalink":"https://chen03.github.io/p/hello-world/","title":"Hello World"}]